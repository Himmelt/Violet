buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.2"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'org.soraworld'
version = '2.5.0-SNAPSHOT'

def _BINTRAY_USER = System.getenv('BINTRAY_USER')
def _BINTRAY_KEY = System.getenv('BINTRAY_KEY')
def _REPO_KEY = version.contains("SNAPSHOT") ? 'oss-snapshot-local' : 'oss-release-local'
def _PUBLISH_CFG = version.contains("SNAPSHOT") ? 'mavenSnapshot' : 'mavenRelease'

sourceCompatibility = targetCompatibility = 1.8

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    jcenter()
    maven { url 'https://repo.spongepowered.org/maven' }
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

dependencies {
    compile 'org.ow2.asm:asm:5.2'
    compile 'org.soraworld:hocon:1.2.3-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT'
    compileOnly 'org.spongepowered:spongeapi:7.2.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    group rootProject.group
    version rootProject.version

    sourceCompatibility = targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        jcenter()
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    }

    configurations {
        shade
        compile.extendsFrom(shade)
        shadeOnly
        compileOnly.extendsFrom(shadeOnly)
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava, rootProject.sourceSets.main.allJava
        includeEmptyDirs = false
    }

    artifacts {
        archives jar
        archives sourcesJar
    }

    artifactory {
        setContextUrl('https://oss.jfrog.org/artifactory')
        publish {
            repository {
                repoKey = _REPO_KEY
                username = _BINTRAY_USER
                password = _BINTRAY_KEY
                maven = true
            }
            defaults {
                publications(_PUBLISH_CFG)
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    includeEmptyDirs = false
}

artifacts {
    archives jar
    archives sourcesJar
}

artifactory {
    setContextUrl('https://oss.jfrog.org/artifactory')
    publish {
        repository {
            repoKey = _REPO_KEY
            username = _BINTRAY_USER
            password = _BINTRAY_KEY
            maven = true
        }
        defaults {
            publications(_PUBLISH_CFG)
        }
    }
}

publishing {
    publications {
        mavenRelease(MavenPublication) {
            from components.java
            groupId = 'org.soraworld'
            artifactId = 'violet-api'
            version = project.version
            artifact sourcesJar
        }
        mavenSnapshot(MavenPublication) {
            from components.java
            groupId = 'org.soraworld'
            artifactId = 'violet-api'
            version = project.version
            artifact sourcesJar
        }
    }
}
