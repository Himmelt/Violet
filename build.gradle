plugins {
    id "com.jfrog.bintray" version "1.8.0"
    id 'org.spongepowered.plugin' version '0.8.1'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'org.soraworld.violet'
version = '2.0.0'
archivesBaseName = 'Violet'

sourceCompatibility = targetCompatibility = 1.8
compileJava {
    sourceCompatibility = targetCompatibility = 1.8
}

repositories {
    jcenter()
    maven {
        name = 'spigot'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
}

configurations {
    shade
    shaded
    compile.extendsFrom(shade)
    compile.extendsFrom(shaded)
}

dependencies {
    shade 'com.typesafe:config:1.3.1'
    shade 'ninja.leaping.configurate:configurate-core:3.3'
    shade 'ninja.leaping.configurate:configurate-hocon:3.3'
    shade 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    shade 'org.spongepowered:spongeapi:7.1.0-SNAPSHOT'
    shade files('lib/Rikka-0.0.1.jar')
}

jar {
    configurations.shade.copyRecursive().setTransitive(false).each {
        artifact -> from(zipTree(artifact))
    }
}

task shaded(type: Jar) {
    from(sourceSets.main.output) {
    }
    configurations.shade.copyRecursive().setTransitive(false).each {
        artifact -> from(zipTree(artifact))
    }
    configurations.shaded.copyRecursive().setTransitive(false).each {
        artifact -> from(zipTree(artifact))
    }
    classifier = 'shaded'
}

publishing {
    publications {
        VioletMaven(MavenPublication) {
            from components.java
            groupId = 'org.soraworld'
            artifactId = 'violet'
            version = project.version
        }
    }
}

bintray {
    key = BINTRAY_KEY
    user = BINTRAY_USER
    publications = ['VioletMaven']
    pkg {
        repo = 'Minecraft'
        name = 'Violet'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Himmelt/Violet.git'
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = 'Spigot/Bukkit/Sponge Violet Plugin Library.'
            released = new Date()
        }
    }
}
